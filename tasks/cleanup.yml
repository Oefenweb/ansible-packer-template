# tasks file
---
- name: cleanup | delete all linux headers
  ansible.builtin.shell: >
    dpkg --get-selections |  awk '{ print $1 }' | grep 'linux-headers' | xargs --no-run-if-empty apt-get -y purge

- name: cleanup | delete specific linux kernels
  ansible.builtin.shell: >
    dpkg --get-selections |  awk '{ print $1 }' | grep 'linux-image-.*-generic' | grep -v `uname -r` | \
    xargs --no-run-if-empty apt-get -y purge

- name: cleanup | delete linux source
  ansible.builtin.shell: >
    dpkg --get-selections |  awk '{ print $1 }' | grep linux-source | xargs --no-run-if-empty apt-get -y purge

- name: cleanup | get development packages
  ansible.builtin.shell: >
    dpkg --get-selections |  awk '{ print $1 }' | grep -- '-dev$'
  register: _development_packages
  failed_when: false

- name: cleanup | delete development packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: absent
    purge: true
  when: item not in packer_template_cleanup_development_exclude
  with_items: "{{ _development_packages.stdout_lines | default([]) }}"

- name: cleanup | get docs packages
  ansible.builtin.shell: >
    dpkg --get-selections |  awk '{ print $1 }' | grep -- '-doc$'
  register: _doc_packages
  failed_when: false

- name: cleanup | delete doc packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: absent
    purge: true
  when: item not in packer_template_cleanup_doc_exclude
  with_items: "{{ _doc_packages.stdout_lines | default([]) }}"

- name: cleanup | delete more packages
  ansible.builtin.apt:
    name: "{{ packer_template_cleanup_more }}"
    state: absent
    purge: true

- name: cleanup | apt clean and autoremove  # noqa command-instead-of-module
  ansible.builtin.command: >
    apt-get -y {{ item }}
  with_items:
    - clean
    - autoremove

- name: cleanup | remove files  # noqa command-instead-of-module
  ansible.builtin.command: >
    rm -rfv {{ item }}
  register: _remove_files
  changed_when: _remove_files.stdout_lines | default([]) | length > 0
  with_items:
    - VBoxGuestAdditions_*.iso
    - VBoxGuestAdditions_*.iso.?

    - /usr/share/doc/*

    - /root/.cache/pip
    - /home/vagrant/.cache/pip

- name: cleanup | remove files
  ansible.builtin.shell: >
    {{ item }}
  register: _remove_files
  changed_when: _remove_files.stdout_lines | default([]) | length > 0
  with_items:
    # caches
    - find /var/cache -type f -print0 | xargs --no-run-if-empty -0 rm -fv
    # log files
    - find /var/log -type f -print0 | xargs --no-run-if-empty -0 rm -fv

- name: cleanup | blank netplan machine-id
  ansible.builtin.copy:
    content: ''
    dest: /etc/machine-id
    force: true
    group: root
    owner: root
    mode: 0444
