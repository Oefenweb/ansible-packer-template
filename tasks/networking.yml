# tasks file
---
- name: networking | disable automatic udev rules for interfaces
  when: (ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('15.04', '<')) or
        (ansible_distribution == 'Debian' and ansible_distribution_version is version('8', '<='))
  block:
    - name: networking | disable automatic udev rules for interfaces  # noqa command-instead-of-module
      ansible.builtin.command: >
        rm -rfv {{ item }}
      register: _disable_udev_rules
      changed_when: _disable_udev_rules.stdout_lines | length > 0
      with_items:
        - /etc/udev/rules.d/70-persistent-net.rules
        - /lib/udev/rules.d/75-persistent-net-generator.rules
        - /dev/.udev/
        - /var/lib/dhcp3/*
        - /var/lib/dhcp/*

    - name: networking | disable automatic udev rules for interfaces
      ansible.builtin.file:
        path: /etc/udev/rules.d/70-persistent-net.rules
        state: directory
        mode: '0755'

- name: networking | create netplan config
  ansible.builtin.copy:
    src: etc/netplan/01-netcfg.yaml
    dest: /etc/netplan/01-netcfg.yaml
    owner: root
    group: root
    mode: '0644'
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version is version('17.10', '>=')

- name: networking | cloud init | remove network config
  ansible.builtin.file:
    path: /etc/netplan/50-cloud-init.yaml
    state: absent
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version is version('18.04', '>=')

- name: networking | cloud init | disable network config
  ansible.builtin.copy:
    content: |
      network: {config: disabled}
    dest: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version is version('22.04', '>=')

- name: networking | remove installer config
  ansible.builtin.file:
    path: /etc/netplan/00-installer-config.yaml
    state: absent
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version is version('20.04', '>=')

- name: networking | make dhclient happy
  ansible.builtin.lineinfile:
    dest: "{{ packer_template_network_interfaces_file }}"
    line: 'pre-up sleep 2'
  when: (ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('17.10', '<')) or
        (ansible_distribution == 'Debian')

- name: networking | disable predictable network interface names  # noqa command-instead-of-module
  ansible.builtin.shell: >
    {{ item }}
  with_items:
    - (test -e {{ packer_template_network_interfaces_file }} && sed -i 's/en[[:alnum:]]*/eth0/g' {{ packer_template_network_interfaces_file }}) || true
    - sed -ie 's/GRUB_CMDLINE_LINUX="\(.*\)"/GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0 \1"/g' /etc/default/grub
    - update-grub
  when: (ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('16.04', '>=')) or
        (ansible_distribution == 'Debian' and ansible_distribution_version is version('9', '>='))
